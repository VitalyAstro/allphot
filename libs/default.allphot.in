# -*-shell-script-*-
# -*-bash-*-  vim: ft=bash

DESCRIPTION="No description available"
VERSION="%VERSION%"
DEFAULT_ACTION="usage"

describe_usage() {
    echo "Display usage information"
}

do_usage() {
    show_usage_message
}

show_usage_message() {
    echo "Usage: ${ALLPHOT_COMMAND} <action> [OPTIONS]"
    echo
    local action
    write_list_start "Standard actions:"
    for action in "help" "usage" "version" ; do
	local desc=""
	is_function "describe_${action}" && desc=$(describe_${action} )
	write_kv_list_entry "${action}" "${desc:-(no description)}"
    done
    
    echo
    write_list_start "Extra actions:"
    
    # FIXME: can we do this using expansion somehow?
    for action in $(set | \
	sed -n -e '/^do_\S\+ ()\s*$/s/^do_\(\S\+\).*/\1/p' | \
	grep -v 'action' | \
	sort ) ; do
	case "${action}" in
	    help|usage|version)
		continue
		;;
	    ?*)
		local desc="" line="" ifs_save="${IFS}" action_text=""
		is_function "describe_${action}" && desc=$(describe_${action} )
		
		if is_function "describe_${action}_parameters" ; then
		    action_text="${action} $(describe_${action}_parameters)"
		else
		    action_text="${action}"
		fi
		
		write_kv_list_entry "${action_text}" "${desc:-(no description)}"
		
		if is_function "describe_${action}_options" ; then
		    IFS=$'\n'
		    local line
		    for line in $(describe_${action}_options) ; do
			write_kv_list_entry -p \
			    "  ${line%%*( ):*}" \
			    "  ${line##+([^:]):*( )}"
		    done
		    IFS="${ifs_save}"
		fi
		;;
	esac
    done
    true
}

describe_version() {
    echo "Display version information"
}

do_version() {
    echo "Version ${VERSION}"
}

describe_help() {
    echo "Display help text"
}

do_help() {
    set_output_mode default
    echo "${DESCRIPTION}"
    show_usage_message
    if is_function show_extra_help_text ; then
	echo
	show_extra_help_text
    fi
    true
}
