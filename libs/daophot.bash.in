# -*-bash-*-
#@BASH@

ALLPHOT_NAME="image"

setup_input() {
    # prepare input file names
    [[ -r ${1} ]] || die -q "could not read input file: '${1}'"
    local procfile="${ALLPHOT_PROCDIR}/$(basename ${1})"
    if [[ ! ${procfile} -ef ${1} ]]; then
	rm -f ${procfile}
	ln -s $(relative_name "${1}" "${ALLPHOT_PROCDIR}") ${procfile}
    fi
    echo $(basename ${procfile})
}

setup_output() {
    [[ -r ${1} ]] && mv -f ${1}{,.old}
    local procfile="${ALLPHOT_PROCDIR}/$(basename ${1})"
    rm -f ${procfile} && echo $(basename ${procfile})
    if [[ ! ${procfile} -ef ${1} ]]; then
	echo >> ${ALLPHOT_PROCDIR}/output.bash "mv -f ${procfile} $(canonicalise ${1})"
	echo >> ${ALLPHOT_PROCDIR}/output.bash "rm -f $(canonicalise ${1}).old"
    fi
}

# daophot_opt <input option file> or
# daophot_opt <OP1>=<value1>...<OPn>=<valuen>
daophot_opt() {
    # no arguments: don't change anything
    [[ -z ${1} ]] && return 0
    echo >> ${ALLPHOT_CMDFILE} "OPTION"
    # option file
    if  [[ -e ${1} ]]; then
	echo >> ${ALLPHOT_CMDFILE} "$(setup_input ${1})"
	return 0
    fi
    # option command
    local opt
    echo >> ${ALLPHOT_CMDFILE}
    for opt in $@; do
	if [[ ${opt} =~ = ]]; then
	    echo >> ${ALLPHOT_CMDFILE} "${opt}"
	fi
    done
    echo >> ${ALLPHOT_CMDFILE}
    echo " >>> Will run DAOPHOT OPT"
}

# daophot_exit
daophot_exit() {
    echo  >> ${ALLPHOT_CMDFILE} "EXIT"
}

# daophot_attach <FITS file>
daophot_attach() {    
    local fitsname="$(setup_input ${1})"
    ALLPHOT_NAME="${fitsname%.*}"    
    echo  >> ${ALLPHOT_CMDFILE} "ATTACH ${fitsname}"
}

# daophot_sky
daophot_sky() {
    echo  >> ${ALLPHOT_CMDFILE} "SKY"
    echo " >>> Will run DAOPHOT SKY"
}

# daophot_find <output coordinate file>
daophot_find() {
    rm -f ${ALLPHOT_PROCDIR}/*jnk.*
    cat  >> ${ALLPHOT_CMDFILE} <<-EOF
	FIND
	1,1
	$(setup_output ${1})
	y
EOF
    echo " >>> Will run DAOPHOT FIND"
}

# daophot_phot <input phot options file> <input coordinate file> <output file>
# or
# daophot_opt <input phot options file> <psf phot file> <input id file> <output file>
daophot_phot() {
    echo >> ${ALLPHOT_CMDFILE}	"PHOT"
    # might have to do the option stuff 
    echo >> ${ALLPHOT_CMDFILE} $(setup_input ${1})
    echo >> ${ALLPHOT_CMDFILE}
    echo >> ${ALLPHOT_CMDFILE} $(setup_input ${2})
    if [[ $# -eq 4 ]]; then
	echo >> ${ALLPHOT_CMDFILE} "$(setup_input ${3})"
	echo >> ${ALLPHOT_CMDFILE} "$(setup_output ${4})"
    else
	# hack to avoid doing the psf subtracted photometry
	[[ -e ${ALLPHOT_PROCDIR}/${ALLPHOT_NAME}.psf ]] && \
	    mv -f ${ALLPHOT_PROCDIR}/${ALLPHOT_NAME}.psf{,.bck}
	echo >> ${ALLPHOT_CMDFILE} "$(setup_output ${3})"
    fi
    echo " >>> Will run DAOPHOT PHOT"
}

# daophot_pick <input file> <nstars> <mag faint> <output psf stars file>
daophot_pick() {
    cat >> ${ALLPHOT_CMDFILE} <<-EOF
	PICK
	$(setup_input ${1})
	${2} ${3}
	$(setup_output ${4})
EOF
    echo " >>> Will run DAOPHOT PICK"
}

# daophot_psf <input mag file> <input psf stars file> <output psf file>  <output neihbour file>
# do two rounds
daophot_psf() {
    $(setup_output ${4}) &> /dev/null
    cat >> ${ALLPHOT_CMDFILE} <<-EOF
	PSF
	$(setup_input ${1})
	$(setup_input ${2})
	$(setup_output ${3})
EOF
    echo " >>> Will run DAOPHOT PSF"
}

# daophot_append <input file 1>  <input file 2> <output merged file>
daophot_append() {
    cat >> ${ALLPHOT_CMDFILE} <<-EOF
	APPEND
	$(setup_input ${1})
	$(setup_input ${2})
	$(setup_output ${3})
EOF
    echo " >>> Will run DAOPHOT APPEND"
}

# daophot_offset <input file> <ID> <DX> <DY> <DMAG> <output file>
daophot_offset() {
    cat >> ${ALLPHOT_CMDFILE} <<-EOF
	OFFSET
	$(setup_input ${1})
	${2} ${3} ${4} ${5}
	$(setup_output ${6})
EOF
    echo " >>> Will run DAOPHOT OFFSET"
}

# daophot_sort <column index> <input file> <output file> <renumber stars?>
daophot_sort() {
    cat >> ${ALLPHOT_CMDFILE} <<-EOF
	SORT
	${1}
	$(setup_input ${2})
	$(setup_output ${3})
	${4}
EOF
    echo " >>> Will run DAOPHOT SORT"
}

# daophot_substar <input psf file> <input phot file>  [<stars to keep file>] <output FITS file>
daophot_substar() {
    cat >> ${ALLPHOT_CMDFILE} <<-EOF
	SUBSTAR
	$(setup_input ${1})
	$(setup_input ${2})
EOF
    if [[ $# -eq 4 ]] && [[ -n ${3} ]]; then
	echo >> ${ALLPHOT_CMDFILE} "Y"
	echo >> ${ALLPHOT_CMDFILE} "$(setup_input ${3})"
	echo >> ${ALLPHOT_CMDFILE} "$(setup_output ${4})"
    elif [[ $# -eq 4 ]] && [[ -z ${3} ]]; then
	echo >> ${ALLPHOT_CMDFILE} "N"
	echo >> ${ALLPHOT_CMDFILE} "$(setup_output ${4})"
    else
	echo >> ${ALLPHOT_CMDFILE} "N"
	echo >> ${ALLPHOT_CMDFILE} "$(setup_output ${4})"
    fi
    echo " >>> Will run DAOPHOT SUBSTAR"
}

# allstar_standard <fits file> <input psf file> <input mag file> <output allstar file> <output fits sub>
daophot_allstar() {
    cat >> ${ALLPHOT_CMDFILE} <<-EOF

	$(setup_input ${1})
	$(setup_input ${2})
	$(setup_input ${3})
	$(setup_output ${4})
	$(setup_output ${5})
EOF
    echo " >>> Will run ALLSTAR"
}
