# -*-bash-*-  vim: ft=bash

: ${ALLPHOT_PROCDIR:=.}
export ALLPHOT_PROCDIR

ALLPHOT_CMDFILE=""
ALLPHOT_PREPROC="${ALLPHOT_PROCDIR}/.allphot_preproc.bash"
ALLPHOT_POSTPROC="${ALLPHOT_PROCDIR}/.allphot_postproc.bash"

# allphot_setup [--optfile=<file>] <command> [<FITS file>] PUBLIC
# setup a directory and option file for processing a fits file with <command>
allphot_setup() {
    local optfile=""
    while [[ $# -gt 0 ]]; do
	case "${1}" in
	    --optfile=*) optfile="${1##*=}" ;;
	    --*) die -q "Unrecognized option '$1'" ;;
              *) break ;;
	esac
	shift
    done
    local cmd=${1:-daophot}
    mkdir -p ${ALLPHOT_PROCDIR}
    ALLPHOT_CMDFILE="${ALLPHOT_PROCDIR}/${cmd}_$$.in"
    ALLPHOT_PREPROC="${ALLPHOT_PROCDIR}/${cmd}_$$.pre"
    ALLPHOT_POSTPROC="${ALLPHOT_PROCDIR}/${cmd}_$$.post"
    touch ${ALLPHOT_CMDFILE}
    export ALLPHOT_CMDFILE ALLPHOT_PREPROC ALLPHOT_POSTPROC
 
    # prepare option file which always has to be passed    
    # should probably go to each command
    if [[ "daophot allstar allframe" =~ ${cmd} ]]; then
	ALLPHOT_OPTFILE="${ALLPHOT_PROCDIR}/${cmd}.opt"
	if [[ -n ${optfile} ]]; then
	    [[ -r ${optfile} ]] || die -q "could not read option file: '${optfile}'"
	    [[ ! ${ALLPHOT_OPTFILE} -ef ${optfile} ]] \
		&& rm -f ${ALLPHOT_OPTFILE} && \
		ln -s $(relative_name ${optfile} "${ALLPHOT_PROCDIR}") ${ALLPHOT_OPTFILE}
	elif [[ ! -e ${ALLPHOT_OPTFILE} ]]; then
	    cp "$(opt_file_path ${cmd})" ${ALLPHOT_OPTFILE}
	fi
	export ALLPHOT_OPTFILE
    fi

}

# allphot_run [<cmd>] PUBLIC
# run the command <cmd> within the processing directory
allphot_run() {
    local cmd="${1:-$(basename ${ALLPHOT_CMDFILE%_*})}"

    # pre-process
    [[ -x $(type -P ${cmd}) ]] || die -q "${cmd} is not a known executable"
    [[ -z ${ALLPHOT_CMDFILE} ]] && die -q "no process to run"

    if [[ -e ${ALLPHOT_PREPROC} ]]; then
	chmod 755 ${ALLPHOT_PREPROC}
	${ALLPHOT_PREPROC}
    fi

    is_debug_mode pretend && return
    # process
    write_process_msg "Running ${cmd}..."
    pushd ${ALLPHOT_PROCDIR} > /dev/null
    if is_output_mode quiet; then
	$(type -P ${cmd}) < $(basename ${ALLPHOT_CMDFILE}) \
	    > /dev/null || die -q "${cmd} failed."
    else
	$(type -P ${cmd}) < $(basename ${ALLPHOT_CMDFILE}) \
	    || die -q "${cmd} failed."
    fi
    popd > /dev/null

    if is_debug_mode debug; then	
	write_process_msg "==== Debug information start ===="
	echo "ALLPHOT_PROCDIR=${ALLPHOT_PROCDIR}"
	echo "ALLPHOT_PREPROC=${ALLPHOT_PREPROC}"
	echo "ALLPHOT_POSTPROC=${ALLPHOT_POSTPROC}"
	echo "Command launched: $(type -P ${cmd}) < $(basename ${ALLPHOT_CMDFILE})"
	write_process_msg "==== Debug information end ===="	
    fi

    # post-process
    if [[ -e ${ALLPHOT_POSTPROC} ]]; then
	chmod 755 ${ALLPHOT_POSTPROC}
	${ALLPHOT_POSTPROC}
    fi
    is_debug_mode debug || rm -f ${ALLPHOT_CMDFILE} ${ALLPHOT_PREPROC} ${ALLPHOT_POSTPROC}

    write_process_msg "Done."
}

# allphot_input <input file> PUBLIC
# prepare an input file to be processed within the processing directory
allphot_input() {
    local procfile="${ALLPHOT_PROCDIR}/$(basename ${1})"
    if [[ ! ${procfile} -ef ${1} ]]; then
	echo >> ${ALLPHOT_PREPROC} "rm -f ${procfile}"
	echo >> ${ALLPHOT_PREPROC} "ln -s $(relative_name "${1}" "${ALLPHOT_PROCDIR}") ${procfile}"
    fi
    echo $(basename ${procfile})
}

# allphot_output <output file> PUBLIC
# prepare a file for output within the processing directory
allphot_output() {
    local outfile="$(canonicalise ${1})"
    [[ -r ${outfile} ]] && mv -f ${outfile}{,.old}
    local procfile="${ALLPHOT_PROCDIR}/$(basename ${outfile})"
    rm -f ${procfile} && echo $(basename ${procfile})
    cat >> ${ALLPHOT_POSTPROC} <<-EOF
	[[ ${procfile} -ef ${outfile} ]] || mv -f ${procfile} ${outfile}
	rm -f ${outfile}.old
EOF
}
