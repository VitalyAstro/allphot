# -*-*-bash-*-*-

inherit process

# mch_getframes <match file> INTERNAL
# return the frame names within a match file
mch_getframes() {
    awk '{print substr($1,2,match($1,/\./)-2)}' ${1}
}

# mch_output <match file> <suf>...<suf> INTERNAL
# prepare frames from a match file with suffixes 
mch_output() {    
    local i f mchfile=${1}
    shift
    for i in $@; do
	for f in $(mch_getframes ${mchfile}); do
	    allphot_output ${f}.${i} > /dev/null
	done
    done
}

# dao_match <input reference star file> <output mch file> <star file 1>...<star file n> PUBLIC
# create a file of answers to be run by daomatch
dao_match() {
    local ref=$(allphot_input ${1})
    echo >> ${ALLPHOT_CMDFILE} ${ref}
    shift
    echo >> ${ALLPHOT_CMDFILE} $(allphot_output ${1})
    shift
    local frame
    for frame in $@; do
	echo >> ${ALLPHOT_CMDFILE} ${frame}
    done
    echo >> ${ALLPHOT_CMDFILE}
    write_process_msg "Will run DAOMATCH with reference ${ref}"
}

# dao_master 1:<input mch file> 2:<min frames>,<min frac frames>,<enough frames> 
#            3:<max sigma> 4:<d.o.f.> 5:<critical rad> 6:<assign stars new IDs?> 
#            7:<output mean mag file> 8:<output cor mag file> 9:<output raw mag file> 10:<output mch file>
#            11:<output transfer table file> 12:<output coo files?> 13:<output mtr files?>  PUBLIC
# create a file of answers to be run by daomaster
dao_master() {
    [[ ${12} == y ]] && mch_output ${1} coo
    [[ ${13} == y ]] && mch_output ${1} mtr
    local mchfilein=$(allphot_input ${1})
    local mchfileout=${10}
    if [[ ${1} == ${10} ]]; then
	mchfileout=$(allphot_output ${10}.out)
	echo >> ${ALLPHOT_POSTPROC} "mv -f $(canonicalise ${10}.out) $(canonicalise ${10})"
    else
	mchfileout=$(allphot_output ${10})
    fi

    cat >> ${ALLPHOT_CMDFILE} <<-EOF
	${mchfilein}
	${2}
	${3}
	${4}
	${5}
EOF
    local f
    for f in ${frames}; do echo >> ${ALLPHOT_CMDFILE}; done
    # loop from initial radius down to 1 pixel radius, do it twice each time
    local -i irad=${5%.*}
    while (( irad > 0 )); do 
	echo >> ${ALLPHOT_CMDFILE} ${irad}
	echo >> ${ALLPHOT_CMDFILE} ${irad}
	irad=$(( ${irad} - 1 ))
    done
    cat >> ${ALLPHOT_CMDFILE} <<-EOF
	0
	${6}
	y
	$(allphot_output ${7})
	y
	$(allphot_output ${8})
	y
	$(allphot_output ${9})
	y
	${mchfileout}
	y
	$(allphot_output ${11})
	${12}
	${13}
EOF
    write_process_msg "Will run DAOMASTER on ${mchfilein}"
}

# dao_allframe <mch file> <mag file>
# create a file of answers to be run by allframe
dao_allframe() {
    mch_output ${1} alf
    local mchfile=$(allphot_input ${1})
    cat >> ${ALLPHOT_CMDFILE} <<-EOF
	
	${mchfile}
	$(allphot_input ${2})
EOF
    write_process_msg "Will run ALLFRAME on ${mchfile}"
}
