# -*-shell-script-*-

DESCRIPTION="Run MONTAGE2 on images"
DEFAULT_ACTION="do"

inherit allframe

describe_do() {
    echo "Create a stack image from overlapping images"
}

describe_do_parameters() {
    echo "MCH"
    echo "A DAOMATCH formatted match file with initial transformations"    
}

describe_do_options() {
    echo "--suffix=STRING  : Suffix for input FITS files (default: j.fits)"
    echo "--frames=N,N     : Minimum number of frames, percentile (default: nframes/2, 0.5)"
    echo "--limits=[x0:x1,y0:y1] : Limits in master coordinates (default: [1:NAXIS1,1:NAXIS2])"
    echo "--expansion=VAL : Expansion factor (default: 1)"
    echo "--no-sky        : Do not re-determine sky"
    echo "--fits=FITS     : Output FITS file name (default: MCH.fits)"
}

do_do() {
    local suf=j.fits frames="" limits="" expn=1 dosky=y outfile=""
    while [[ $# -gt 0 ]]; do
	case "${1}" in
	    --suffix=*) suf="${1##*=}" ;;
            --frames=*) frames"=${1##*=}" ;;
	    --limits=*) limits="${1##*=}" ;;
    	    --expansion=*) expn="${1##*=}" ;;
    	    --no-sky) dosky=n ;;
	    --fits=*) outfile="${1##*=}" ;;
	    --*) die -q "Unrecognized option '${1}'" ;;
              *) break ;;
        esac
	shift
    done

    [[ $# -lt 1 ]] && do_usage && return

    local master=$(mch_getmaster ${1})
    master=${master%.*}${suf}
    : ${limits:="[1:$(fitskey -n -p NAXIS1 ${master}),1:$(fitskey -n -p NAXIS2 ${master})]"}
    local nframes=$(wc -l ${1} | cut -d ' ' -f 1)
    nframes=$(( ${nframes} / 2 ))
    (( nframes > 13 )) && nframes=13
    : ${frames:="${nframes},0.5"}    

    allphot_setup montage2
    dao_montage2 ${1} ${suf} ${frames} ${limits} ${expn} ${dosky} \
	${outfile:-${1%.*}.fits}
    allphot_run montage2
}
